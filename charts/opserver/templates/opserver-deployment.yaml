apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "opserver.labels" . | nindent 4 }}
  name: {{ include "opserver.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      {{- include "opserver.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.pod.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "opserver.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
      {{- range . }}
        - {{ .name  }}
      {{- end }}
      {{- end }}
      serviceaccountName: {{ include "opserver.serviceAccountName" . }}
      securityContext:
        {{- include "securityContext" . | indent 8 }}
      containers:
        - env:
            - name: API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "opserver.fullname" . }}-secret
                  key: API_TOKEN
          image: "{{ default "docker.io" .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ default "Always" .Values.image.pullPolicy }}
          name: {{ .Chart.Name }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            httpGet:
              path: /v1/summarize
              port: {{ .Values.service.port }}
            timeoutSeconds: 2
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - ls /usr/src/app
              failureThreshold: 3
              initialDelaySeconds: 2
              periodSeconds: 5
              successThreshold: 2
              timeoutSeconds: 5
          stdin: true
          tty: true
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              hostPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: {{ include "opserver.fullname" . }}-config
              readOnly: true
            - mountPath: /tmp
              name: tmp
          securityContext:
            {{- include "pod.securityContext" . | indent 12 }}
          resources:
            {{- toYaml .Values.pod.resources | nindent 12 }}
      restartPolicy: Always
      volumes:
        - name: tmp
          emptyDir:
            sizeLimit: 20Mi
        - name: {{ include "opserver.fullname" . }}-config
          configMap:
            name: {{ include "opserver.fullname" . }}-config
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
